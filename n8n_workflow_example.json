{
  "name": "Vacation Rental Intelligence Workflow",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "value": "0 2 * * *"
            }
          ]
        }
      },
      "id": "cron-trigger",
      "name": "Daily 2 AM Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "url": "https://api.holidu.com/properties",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "holiduApi",
        "options": {}
      },
      "id": "fetch-properties",
      "name": "Fetch All Properties",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "https://api.holidu.com/bookings",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "holiduApi",
        "options": {
          "qs": {
            "date_from": "={{ $now.minus({ days: 30 }).toISO() }}",
            "date_to": "={{ $now.toISO() }}"
          }
        }
      },
      "id": "fetch-bookings",
      "name": "Fetch Recent Bookings",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 480]
    },
    {
      "parameters": {
        "url": "https://api.holidu.com/reviews",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "holiduApi",
        "options": {}
      },
      "id": "fetch-reviews",
      "name": "Fetch Guest Reviews",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 660]
    },
    {
      "parameters": {
        "jsCode": "// Merge data from multiple sources\nconst properties = $input.first().json;\nconst bookings = $input.all()[1].json;\nconst reviews = $input.all()[2].json;\n\n// Create enriched property data\nconst enrichedProperties = properties.map(property => {\n  const propertyBookings = bookings.filter(booking => \n    booking.property_id === property.id\n  );\n  \n  const propertyReviews = reviews.filter(review => \n    review.property_id === property.id\n  );\n  \n  // Calculate metrics\n  const totalRevenue = propertyBookings.reduce((sum, booking) => \n    sum + booking.revenue, 0\n  );\n  \n  const averageRating = propertyReviews.length > 0 \n    ? propertyReviews.reduce((sum, review) => sum + review.rating, 0) / propertyReviews.length\n    : 0;\n  \n  const occupancyRate = (propertyBookings.length / 30) * 100; // Assuming 30-day period\n  \n  return {\n    ...property,\n    metrics: {\n      total_revenue: totalRevenue,\n      average_rating: averageRating,\n      occupancy_rate: occupancyRate,\n      booking_count: propertyBookings.length,\n      review_count: propertyReviews.length\n    }\n  };\n});\n\nreturn enrichedProperties.map(property => ({ json: property }));"
      },
      "id": "merge-data",
      "name": "Merge & Calculate Metrics",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 480]
    },
    {
      "parameters": {
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "gpt-4"
            },
            {
              "name": "messages",
              "value": "=[\n  {\n    \"role\": \"system\",\n    \"content\": \"You are a vacation rental optimization expert. Analyze property data and provide actionable insights for pricing, maintenance, and guest experience improvements.\"\n  },\n  {\n    \"role\": \"user\",\n    \"content\": `Analyze this vacation rental property and provide optimization recommendations:\\n\\nProperty: ${$json.name}\\nLocation: ${$json.location}\\nCurrent Price: $${$json.price_per_night}\\nOccupancy Rate: ${$json.metrics.occupancy_rate.toFixed(1)}%\\nRevenue (30 days): $${$json.metrics.total_revenue}\\nGuest Rating: ${$json.metrics.average_rating.toFixed(1)}/5\\nBookings: ${$json.metrics.booking_count}\\nReviews: ${$json.metrics.review_count}\\n\\nProvide:\\n1. Pricing recommendation (increase/decrease/maintain)\\n2. Maintenance priority (high/medium/low)\\n3. Guest experience improvements\\n4. Top 3 optimization opportunities\\n5. Estimated impact on revenue\\n\\nFormat as JSON.`\n  }\n]"
            },
            {
              "name": "temperature",
              "value": "0.3"
            }
          ]
        },
        "options": {}
      },
      "id": "ai-analysis",
      "name": "AI Property Analysis",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 480]
    },
    {
      "parameters": {
        "jsCode": "// Process AI analysis and generate actions\nconst analysis = JSON.parse($json.choices[0].message.content);\nconst property = $('Merge & Calculate Metrics').first().json;\n\nconst actions = [];\n\n// Pricing optimization action\nif (analysis.pricing_recommendation !== 'maintain') {\n  actions.push({\n    type: 'pricing_update',\n    property_id: property.id,\n    action: `Update pricing: ${analysis.pricing_recommendation}`,\n    priority: 'high',\n    automated: true,\n    estimated_impact: analysis.estimated_revenue_impact\n  });\n}\n\n// Maintenance action\nif (analysis.maintenance_priority === 'high') {\n  actions.push({\n    type: 'maintenance_schedule',\n    property_id: property.id,\n    action: 'Schedule urgent maintenance check',\n    priority: 'urgent',\n    automated: true\n  });\n}\n\n// Guest experience action\nif (property.metrics.average_rating < 4.0) {\n  actions.push({\n    type: 'guest_experience',\n    property_id: property.id,\n    action: 'Review and improve guest amenities',\n    priority: 'medium',\n    automated: false,\n    requires_human: true\n  });\n}\n\nreturn actions.map(action => ({ json: action }));"
      },
      "id": "generate-actions",
      "name": "Generate Actions",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 480]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "automated-condition",
              "leftValue": "={{ $json.automated }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-automated",
      "name": "Check if Automated",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1340, 480]
    },
    {
      "parameters": {
        "url": "https://api.holidu.com/pricing",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "holiduApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "property_id",
              "value": "={{ $json.property_id }}"
            },
            {
              "name": "action",
              "value": "={{ $json.action }}"
            }
          ]
        },
        "options": {}
      },
      "id": "execute-pricing",
      "name": "Execute Pricing Update",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 380]
    },
    {
      "parameters": {
        "url": "https://api.holidu.com/maintenance",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "holiduApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "property_id",
              "value": "={{ $json.property_id }}"
            },
            {
              "name": "priority",
              "value": "={{ $json.priority }}"
            },
            {
              "name": "description",
              "value": "={{ $json.action }}"
            }
          ]
        },
        "options": {}
      },
      "id": "execute-maintenance",
      "name": "Schedule Maintenance",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 580]
    },
    {
      "parameters": {
        "url": "https://api.holidu.com/notifications",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "holiduApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "type",
              "value": "human_review_required"
            },
            {
              "name": "property_id",
              "value": "={{ $json.property_id }}"
            },
            {
              "name": "action",
              "value": "={{ $json.action }}"
            },
            {
              "name": "priority",
              "value": "={{ $json.priority }}"
            }
          ]
        },
        "options": {}
      },
      "id": "notify-human",
      "name": "Notify Human Review",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1560, 780]
    },
    {
      "parameters": {
        "url": "https://api.holidu.com/reports",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "holiduApi",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "report_type",
              "value": "automation_summary"
            },
            {
              "name": "data",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "log-results",
      "name": "Log Results",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1780, 480]
    }
  ],
  "connections": {
    "Daily 2 AM Trigger": {
      "main": [
        [
          {
            "node": "Fetch All Properties",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch Recent Bookings",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch Guest Reviews",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch All Properties": {
      "main": [
        [
          {
            "node": "Merge & Calculate Metrics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Recent Bookings": {
      "main": [
        [
          {
            "node": "Merge & Calculate Metrics",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Fetch Guest Reviews": {
      "main": [
        [
          {
            "node": "Merge & Calculate Metrics",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge & Calculate Metrics": {
      "main": [
        [
          {
            "node": "AI Property Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Property Analysis": {
      "main": [
        [
          {
            "node": "Generate Actions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Actions": {
      "main": [
        [
          {
            "node": "Check if Automated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Automated": {
      "main": [
        [
          {
            "node": "Execute Pricing Update",
            "type": "main",
            "index": 0
          },
          {
            "node": "Schedule Maintenance",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Notify Human Review",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Pricing Update": {
      "main": [
        [
          {
            "node": "Log Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Maintenance": {
      "main": [
        [
          {
            "node": "Log Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Human Review": {
      "main": [
        [
          {
            "node": "Log Results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-01-15T10:00:00.000Z",
  "versionId": "1"
}
